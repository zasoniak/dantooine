<!DOCTYPE html>
<html>
<head>
    <title><%= "Bardzo sesja" + ' - ' + site.title %></title>
    <link rel="stylesheet" href="/stylesheets/pure-min.css">
    <link rel="stylesheet" href="/stylesheets/mchtr-styler.css">
    <meta name="robots" content="noindex, nofollow">
</head>
<body class="screencast">
<header class="content">
    <p id="title" class="left">Posiedzenie Rady Wydziału nr 756</p>
    <div class="right">
        Głosowanie <span id="voting-increment">0</span> z <%= session.votings.length %>
        <p id="timer" class="green"></p>
    </div>
</header>
<div class="content">
    <h1 id="question">Witamy na posiedzeniu rady wydziału</h1>
</div>
<div class="content" id="variants">
    <article>
        <div class="green">Aktualnie głosujemy</div>
        <h2 class="answer">Dzień dobry!</h2>
        <div class="green">Zebrano <span data-id="votes-counter">0</span> spośród <span data-id="votes-all">X</span> głosów</div>
    </article>
</div>
<div class="content" id="results" style="display: none; padding: 0;">
    <table class="pure-table dantooine-table voting-results-table" style="margin: 0;">
        <thead>
            <tr>
                <th>Odpowiedź</th><th>TAK</th><th>NIE</th><th>WSTM</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th>Wariant</th>
                <td style="font-size: 44pt; line-height: 44pt">TAK</td>
                <td style="font-size: 44pt; line-height: 44pt">NIE</td>
                <td style="font-size: 44pt; line-height: 44pt">WSTM</td>
            </tr>
        </tbody>
    </table>
</div>
<% include footer.ejs %>
<script type="text/javascript" src="/lib/node_modules/jquery/dist/jquery.js"></script>
<script type="text/javascript" src="/lib/node_modules/socket.io-client/socket.io.js"></script>
<script type="text/javascript">

    var socket = io.connect('http://localhost:8080');
    socket.on('connect', function () {
        console.log('find("tbody").first().Połączono rzutnik z serwerem :D');
    });
    socket.on('voting prepared', function (data) {
        console.log('Received voting prepared event.');
        newQuestion(data.voting);
    });
    socket.on('voting started', function () {
        console.log('Received voting started event. Starting countdown...');
        startCountdown();
        nextSubvariant();
    });
    socket.on('voting ended', function (data) {
        console.log('Received voting ended event. Showing results...');
        showResults(data.results);
    });
    socket.on('votes updated', function (data) {
        console.log('Received votes updated event.');
        console.log(data);
        updateVotesCounter(data.voted, data.all);
    });

    var article = $('article').first().clone();

    var countdown = 60;
    var interval;
    var votingCounter = 0;
    var result = false;
    var resultsDiv = $('#results');
    var resultsTableBody = resultsDiv.find('tbody').first();
    var variantsDiv = $('#variants');

    function changeTimeIndicatorToResult() {
        clearInterval(interval);
        $('#timer').removeClass('green').html('Wyniki');
    }

    function setTimer(sec) {
        $('#timer').addClass('green').html(sec+"s");
    }

    function incrementVotingCounter() {
        $('#voting-increment').html(++votingCounter);
    }

    function updateVotesCounter(voted, all) {
        var current = $('.current-variant');
        current.find('[data-id="votes-counter"]').first().html(voted);
        current.find('[data-id="votes-all"]').first().html(all);
    }

    function hideResultsAndShowVariants() {
        setTimer(60);
        resultsDiv.hide();
        variantsDiv.show();
    }

    function newQuestion(voting) {
        $('#variants').empty();
        $('#question').html(voting.question);
        hideResultsAndShowVariants();
        if (voting.type == 1) {
            article.find('.answer').first().html("TAK / NIE");
            nextSubvariant();
        } else if (voting.type == 2) {
            for (var i=0; i<voting.variants.length; i++) {
                article.clone().appendTo('#variants').find('.answer').first().html(voting.variants[i].content);
            }
        }
        incrementVotingCounter();
        countdown = 60;
        setTimer(60);
    }

    function startCountdown() {
        interval = setInterval(function() {
            setTimer(--countdown)

            if (countdown <= 0)
            {
                clearInterval(interval);
            }
        }, 1000);
    }

    //TODO: Dorobić zmianę tekstu wokół aktualnie głosowanej odpowiedzi

    function nextSubvariant() {
        var current = $('article.current-variant').first();
        if (current.length == 0) {
            current = $('article').first();
            current.addClass('current-variant');
        }
        else {
            current.removeClass('current-variant').next().addClass('current-variant');
        }
    }

    function prepareResultsTable(results) {
        var tempRow = resultsTableBody.find("tr").first().clone(true);
        resultsTableBody.empty();
        resultsTableBody.append(tempRow);
        var newRow;
        var answers = results.answers;
        if (results.type == 2) {
            for (var v = 0; v < results.variants.length; v++) {
                newRow = resultsTableBody.find("tr").first().clone(true);
                var variant = results.variants[v];
                newRow.find('th').first().html(variant.content);
                // yes votes
                var yesVotes = 0;
                for (var a = 0; a < answers.length; a++) {
                    var answer = answers[a];
                    if (answer.variantId == variant.id && answer.value == 1) {
                        yesVotes++;
                    }
                }
                // no votes
                var noVotes = 0;
                for (var a = 0; a < answers.length; a++) {
                    var answer = answers[a];
                    if (answer.variantId == variant.id && answer.value == 2) {
                        noVotes++;
                    }
                }
                // refrain votes
                var refrainVotes = 0;
                for (var a = 0; a < answers.length; a++) {
                    var answer = answers[a];
                    if (answer.variantId == variant.id && answer.value == 3) {
                        refrainVotes++;
                    }
                }
                // put into table
                var cells = newRow.find('td');
                cells.eq(0).html(yesVotes);
                cells.eq(1).html(noVotes);
                cells.eq(2).html(refrainVotes);
                // add row to table
                resultsTableBody.append(newRow);
            }
        }
        else if (results.type == 1) {
            newRow = resultsTableBody.find("tr").first().clone(true);
            newRow.find('th').first().html(results.question);
            // yes votes
            var yesVotes = 0;
            for (var a = 0; a < answers.length; a++) {
                var answer = answers[a];
                if (answer.variantId == 0 && answer.value == 1) {
                    yesVotes++;
                }
            }
            // no votes
            var noVotes = 0;
            for (var a = 0; a < answers.length; a++) {
                var answer = answers[a];
                if (answer.variantId == 0 && answer.value == 2) {
                    noVotes++;
                }
            }
            // refrain votes
            var refrainVotes = 0;
            for (var a = 0; a < answers.length; a++) {
                var answer = answers[a];
                if (answer.variantId == 0 && answer.value == 3) {
                    refrainVotes++;
                }
            }
            // put into table
            var cells = newRow.find('td');
            cells.eq(0).html(yesVotes);
            cells.eq(1).html(noVotes);
            cells.eq(2).html(refrainVotes);
            // add row to table
            resultsTableBody.append(newRow);
        }
        tempRow.remove();
    }

    function showResults(results) {
        console.log(results);
        changeTimeIndicatorToResult();
        variantsDiv.hide();
        prepareResultsTable(results);
        resultsDiv.show();
    }
</script>
</body>
</html>
